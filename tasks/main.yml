---
# tasks file for ansible-role-kafka
- name: Set some role facts
  include_tasks: gather_role_facts.yml
  tags:
    - role_facts

- name: Install dependency packages
  package:
    name: "{{ _kafka_broker_packages }}"
    update_cache: true
    state: present
  tags:
    - packages

- name: Stat the destination dir
  stat:
    path: "{{ kafka_broker_prefix }}"
  register: _kafka_broker_st
  tags:
    - install

- name: Load the checksum
  slurp:
    path: "{{ kafka_broker_prefix }}/.kafka_broker_ansible_checksum"
  failed_when: false
  register: _checksum
  tags:
    - install

- name: Create destination dir
  file:
    path: "{{ kafka_broker_prefix }}"
    state: directory
    owner: "{{ kafka_broker_user | default('root') }}"
    group: "{{ kafka_broker_group | default('root') }}"
    # Default directories: 0755, files: 0644
    mode: "{{ kafka_broker_mode | default('u+rwX,go+rX,go-w') }}"
  when:
    - "not _kafka_broker_st.stat.exists"
  tags:
    - install

- block:
    - name: Create a tmpdir for the archive
      tempfile:
        state: directory
      register: _archive_tmpdir

    - name: Create a tmpdir for the extracted resources
      tempfile:
        state: directory
      register: _resources_tmpdir

    - name: Download archive
      get_url:
        url: "{{ kafka_broker_release_src }}"
        dest: "{{ _archive_tmpdir.path }}/{{ kafka_broker_release_src | basename }}"
        checksum: "{{ kafka_broker_release_checksum | default(omit) }}"

    - name: Get the archive checksum
      stat:
        path: "{{ _archive_tmpdir.path }}/{{ kafka_broker_release_src | basename }}"
      register: _src_st

    - name: Extract the archive
      unarchive:
        src: "{{ _archive_tmpdir.path }}/{{ kafka_broker_release_src | basename }}"
        dest: "{{ _resources_tmpdir.path }}"
        owner: "{{ kafka_broker_user }}"
        group: "{{ kafka_broker_group }}"
        remote_src: "{{ kafka_broker_release_remote_src | bool }}"
      register: _extraction

    - name: Output the appropriate checksum
      copy:
        content: "{{ _src_st.stat.checksum }}"
        dest: >-
          {{ _resources_tmpdir.path }}/{{ kafka_broker_release_src | basename |
          regex_replace('.tgz$', '') }}/.kafka_broker_ansible_checksum

    - name: Synchronize tmpdir over to the prefix dir
      synchronize:
        src: >-
          {{ _resources_tmpdir.path }}/{{ kafka_broker_release_src | basename |
          regex_replace('.tgz$', '') }}/
        dest: "{{ kafka_broker_prefix }}/"
        owner: true
        group: true
      delegate_to: "{{ inventory_hostname }}"
  always:
    - name: Cleanup tmpdir
      file:
        path: "{{ _archive_tmpdir.path }}"
        state: absent

    - name: Cleanup tmpdir
      file:
        path: "{{ _resources_tmpdir.path }}"
        state: absent
  when:
    - >-
      ('content' is not in _checksum) or
      (
        (kafka_broker_release_checksum is not none) and
        ((_checksum.content | b64decode) != kafka_broker_release_checksum)
      )

- block:
    - name: Install kafka broker systemd service
      template:
        src: kafka-broker.systemd.service.j2
        dest: "/etc/systemd/system/{{ kafka_broker_service_name }}.service"
        owner: root
        group: root
        mode: "0644"
      notify:
        - systemctl daemon-reload

    - name: Install a custom kafka start script
      copy:
        src: kafka-broker
        dest: "{{ kafka_broker_start_script_file }}"
        owner: root
        group: root
        mode: "0755"

    - name: Install Kafka environment defaults
      template:
        src: environment-file.j2
        dest: "{{ kafka_broker_environment_file }}"
        owner: root
        group: root
        mode: "0644"
      vars:
        environment_vars: "{{ kafka_broker_environment }}"

    - name: Flush handlers
      meta: flush_handlers

- name: Install the server.properties config file
  template:
    src: server.properties.j2
    dest: "{{ _kafka_broker_server_properties_file }}"
    owner: "{{ kafka_broker_user }}"
    group: "{{ kafka_broker_group }}"
    mode: "0644"
  notify:
    - restart kafka

- name: Set kafka broker service state
  service:
    name: "{{ kafka_broker_service_name }}"
    state: "{{ kafka_broker_service_state }}"
    enabled: "{{ kafka_broker_service_enabled }}"
